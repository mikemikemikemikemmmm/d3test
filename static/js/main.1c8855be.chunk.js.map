{"version":3,"sources":["data.csv","1.js","2.js","consist.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Spend","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","yearIndex","moneyIndex","typeIndex","svgH","svgW","paddingY","isInitDraw","rectW","rectIntervalW","paddingX","svgSelect","rectGroup","YScale","XScale","draw","console","log","dataSet","length","d3","attr","append","concat","domain","range","YAxis","type","XAxis","_this2","originalData","dataSetSum","reduce","counter","value","map","item","initDraw","rectUpdate","selectAll","data","rectEnter","enter","d","i","textUpdate","textEnter","text","parseInt","_this3","react_default","a","createElement","name","id","onChange","e","setState","target","year","element","index","key","money","style","position","left","className","Component","App","select","selectGroup","tempArr","_loop","_moneyIndex","singleTypeSpend","tempSum","_typeIndex","differentTypeSpendSum","makeDataSet","initData","dataArray","require","then","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","singleYearData","indexOf","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","moneyStr","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","typeStr","Number","err","return","react_router_dom","basename","to","marginRight","react_router","exact","path","render","_1_Spend","_2_App","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c8855be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data.fb175d19.csv\";","import React, { Component } from 'react';\nimport * as d3 from 'd3'\nexport default class Spend extends Component {\n  constructor(props) {\n    /*\n    data[年度][收入][種類]\n    */ \n    super(props)\n    this.state = {\n      yearIndex: 0,\n      moneyIndex: 0,\n      typeIndex: 0,\n    }\n    this.svgH = 500\n    this.svgW = 500\n    this.paddingY = 30\n    this.isInitDraw = false\n    this.rectW = 20\n    this.rectIntervalW = null\n    this.paddingX = 30\n    this.svgSelect = null\n    this.rectGroup = null\n    this.YScale = null\n    this.XScale = null\n  }\n  componentDidMount() {\n    this.draw()\n  }\n  componentDidUpdate() {\n    if (this.isInitDraw) {\n      this.draw()\n    }\n    console.log('update')\n  }\n  initDraw(dataSet) {\n    //init axis and svg\n    this.rectIntervalW = (this.svgW - 2 * this.paddingX) / dataSet.length\n    this.svgSelect = d3.select('.test').attr('width', this.svgW).attr('height', this.svgH)\n\n    //group rect\n    this.rectGroup = this.svgSelect.append('g')\n      .attr(\"transform\", `translate(${this.paddingX},${this.paddingY})`)\n\n    this.YScale = d3.scaleLinear().domain([0, 0.5]).range([this.svgH - 2 * this.paddingY, 0])\n    const YAxis = d3.axisLeft(this.YScale);\n    //group YAxis\n    const YAxisGroup = this.svgSelect.append('g')\n      .attr(\"transform\", `translate(${this.paddingX},${this.paddingY})`)\n      .call(YAxis);\n\n    //make XAxis text \n    this.XScale = d3.scaleBand().domain(this.props.type).range([0, this.svgW - 2 * this.paddingX])\n    const XAxis = d3.axisBottom(this.XScale)\n    //group XAxis\n    const XAxisGroup = this.svgSelect.append('g')\n      .attr(\"transform\", `translate(${this.paddingX},${this.svgH - this.paddingY})`)\n      .call(XAxis);\n\n    this.isInitDraw = true\n  }\n  draw() {\n    const { originalData } = this.props\n\n    //compute sum \n    const dataSetSum = originalData[this.state.yearIndex][this.state.moneyIndex].reduce((counter, value) => counter + value)\n    \n    //make a new dataSet example 107year 50revenue [type1,type2,type3...] \n    const dataSet = originalData[this.state.yearIndex][this.state.moneyIndex].map(item => item / dataSetSum)\n    if (this.isInitDraw === false) {\n      //if it is first time to render ,then init\n      this.initDraw(dataSet)\n      console.log(dataSet)\n    }\n    //make rect\n    const rect = this.rectGroup.selectAll('rect')\n    const rectUpdate = rect.data(dataSet)\n    const rectEnter = rectUpdate.enter()\n    rectUpdate.attr('height', d => this.svgH - 2 * this.paddingY - this.YScale(d))\n      .attr('y', d => this.YScale(d))\n    rectEnter\n      .append('rect')\n      .attr('width', this.rectW)\n      .attr('height', d => this.svgH - 2 * this.paddingY - this.YScale(d))\n      .attr('x', (d, i) => (i + 1 / 2) * this.rectIntervalW - 1 / 2 * this.rectW)\n      .attr('y', d => this.YScale(d))\n      \n    //make text for num percent\n    const text = this.rectGroup.selectAll('text')\n    const textUpdate = text.data(dataSet)\n    const textEnter = textUpdate.enter()\n    textUpdate\n      .attr('y', d => this.YScale(d) - 10)\n      .text(d => `${parseInt(d * 100)}%`)\n    textEnter\n      .append('text')\n      .text(d => `${parseInt(d * 100)}%`)\n      .attr('x', (d, i) => (i + 1 / 2) * this.rectIntervalW )\n      .attr('y', d => this.YScale(d) - 10)\n      .attr('text-anchor', \"middle\")\n  }\n  render() {\n    const { originalData } = this.props\n    if (originalData.length !== 0) {\n      return (\n        <section>\n          <header>\n            <span>\n              年度<select name=\"\" id=\"\" onChange={e => this.setState({ yearIndex: e.target.value })}>\n                {this.props.year.map((element, index) => <option key={element} value={index}>{element}</option>)}\n              </select></span>\n\n            <span>年收入<select name=\"\" id=\"\" onChange={e => this.setState({ moneyIndex: e.target.value })}>\n              {this.props.money.map((element, index) => <option key={element} value={index}>{element}</option>)}\n            </select></span>\n          </header>\n          <svg style={{ position: 'relative', left: 100 }} className='test'></svg>\n        </section>\n      )\n    } else {\n      return (\n        <div>Loading</div>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport * as d3 from 'd3'\nexport default class App extends Component {\n  constructor(props) {\n    /*\n    data[年度][收入][種類]\n    */\n    super(props)\n    this.state = {\n      yearIndex: 0,\n      moneyIndex: 0,\n      typeIndex: 0,\n    }\n    this.svgH = 500\n    this.svgW = 500\n    this.paddingY = 30\n    this.isInitDraw = false\n    this.rectW = 20\n    this.rectIntervalW = null\n    this.paddingX = 30\n    this.select = null\n    this.selectGroup = null\n    this.YScale = null\n    this.XScale = null\n  }\n  componentDidMount() {\n    this.draw()\n  }\n  componentDidUpdate() {\n    if (this.isInitDraw) {\n      this.draw()\n    }\n    console.log('update')\n  }\n  initDraw(dataSet) {\n    this.rectIntervalW = (this.svgW - 2 * this.paddingX) / dataSet.length\n    this.select = d3.select('.test').attr('width', this.svgW).attr('height', this.svgH)\n    this.selectGroup = this.select.append('g')\n      .attr(\"transform\", `translate(${this.paddingX},${this.paddingY})`)\n\n    //render YAxis\n    this.YScale = d3.scaleLinear().domain([0, 0.5]).range([this.svgH - 2 * this.paddingY, 0])\n    const YAxis = d3.axisLeft(this.YScale);\n    const YAxisG = this.select.append('g')\n      .attr(\"transform\", `translate(${this.paddingX},${this.paddingY})`)\n      .call(YAxis);\n    //\n\n    //render XAxis\n    this.XScale = d3.scaleBand().domain(this.props.money).range([0, this.svgW - 2 * this.paddingX])\n    const XAxis = d3.axisBottom(this.XScale)\n    const XAxisG = this.select.append('g')\n      .attr(\"transform\", `translate(${this.paddingX},${this.svgH - this.paddingY})`)\n      .call(XAxis);\n    //\n\n    this.isInitDraw = true\n  }\n  draw() {\n    const { originalData } = this.props\n    let dataSet = null\n    const makeDataSet = () => { //has side effect\n      let tempArr = []\n      for (let _moneyIndex = 0; _moneyIndex < originalData[this.state.yearIndex].length; _moneyIndex++) {\n        const singleTypeSpend = originalData[this.state.yearIndex][_moneyIndex][this.state.typeIndex]\n        const differentTypeSpendSum = () => {\n          let tempSum = 0\n          for (let _typeIndex = 0; _typeIndex < originalData[this.state.yearIndex][_moneyIndex].length; _typeIndex++) {\n            tempSum += originalData[this.state.yearIndex][_moneyIndex][_typeIndex]\n          }\n          return tempSum\n        }\n        tempArr[_moneyIndex] = singleTypeSpend / differentTypeSpendSum()\n      }\n      dataSet = [...tempArr]\n    }\n    makeDataSet()\n    if (!this.isInitDraw) {\n      this.initDraw(dataSet)\n    }\n    const rect = this.selectGroup.selectAll('rect')\n    const rectUpdate = rect.data(dataSet)\n    const rectEnter = rectUpdate.enter()\n    rectUpdate.attr('height', d => this.svgH - 2 * this.paddingY - this.YScale(d))\n      .attr('y', d => this.YScale(d))\n    rectEnter\n      .append('rect')\n      .attr('width', this.rectW)\n      .attr('height', d => this.svgH - 2 * this.paddingY - this.YScale(d))\n      .attr('x', (d, i) => (i + 1 / 2) * this.rectIntervalW - 1 / 2 * this.rectW)\n      .attr('y', d => this.YScale(d))\n    const text = this.selectGroup.selectAll('text')\n    const textUpdate = text.data(dataSet)\n    const textEnter = textUpdate.enter()\n    textUpdate\n      .attr('y', d => this.YScale(d) - 10)\n      .text(d => `${parseInt(d * 100)}%`)\n    textEnter\n      .append('text')\n      .text(d => `${parseInt(d * 100)}%`)\n      .attr('x', (d, i) => (i + 1 / 2) * this.rectIntervalW)\n      .attr('y', d => this.YScale(d) - 10)\n      .attr('text-anchor', \"middle\")\n  }\n  render() {\n    const { originalData } = this.props\n    if (originalData.length !== 0) {\n      return (\n        <section>\n          <header>\n            <span>\n              年度<select name=\"\" id=\"\" onChange={e => this.setState({ yearIndex: e.target.value })}>\n                {this.props.year.map((element, index) => <option key={element} value={index}>{element}</option>)}\n              </select></span>\n\n            <span>種類<select name=\"\" id=\"\" onChange={e => this.setState({ typeIndex: e.target.value })}>\n              {this.props.type.map((element, index) => <option key={element} value={index}>{element}</option>)}\n            </select></span>\n          </header>\n          <svg style={{ position: 'relative', left: 100 }} className='test'></svg>\n        </section>\n      )\n    } else {\n      return (\n        <div>Loading</div>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3'\r\nexport default class Spend extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            yearIndex: 0,\r\n            moneyIndex: 0,\r\n            typeIndex: 0,\r\n        }\r\n        this.svgH = 500\r\n        this.svgW = 500\r\n        this.radius = Math.min(this.svgH, this.svgW) / 2;\r\n        this.paddingY = 30\r\n        this.isInitDraw = false\r\n        this.rectW = 20\r\n        this.rectIntervalW = null\r\n        this.paddingX = 30\r\n        this.svgSelect = null\r\n        this.rectGroup = null\r\n        this.YScale = null\r\n        this.XScale = null\r\n    }\r\n    componentDidMount() {\r\n        this.draw()\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.isInitDraw) {\r\n            this.draw()\r\n        }\r\n        console.log('update')\r\n    }\r\n    initDraw(dataSet) {\r\n        this.rectIntervalW = (this.svgW - 2 * this.paddingX) / dataSet.length\r\n        this.svgSelect = d3.select('.test').attr('width', this.svgW).attr('height', this.svgH)\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(${this.svgH / 2}, ${this.svgW / 2})`);\r\n        this.isInitDraw = true\r\n    }\r\n    draw() {\r\n        const { data } = this.props\r\n        const dataSetSum = data[this.state.yearIndex][this.state.moneyIndex].reduce((counter, value) => counter + value)\r\n        const dataSet = data[this.state.yearIndex][this.state.moneyIndex].map(item => item / dataSetSum)\r\n        if (this.isInitDraw === false) {\r\n            this.initDraw(dataSet)\r\n        }\r\n    }\r\n    render() {\r\n        const { data } = this.props\r\n        if (data.length !== 0) {\r\n            return (\r\n                <section>\r\n                    <header>\r\n                        <span>\r\n                            年度<select name=\"\" id=\"\" onChange={e => this.setState({ yearIndex: e.target.value })}>\r\n                                {this.props.year.map((element, index) => <option key={element} value={index}>{element}</option>)}\r\n                            </select></span>\r\n\r\n                        <span>年收入<select name=\"\" id=\"\" onChange={e => this.setState({ moneyIndex: e.target.value })}>\r\n                            {this.props.money.map((element, index) => <option key={element} value={index}>{element}</option>)}\r\n                        </select></span>\r\n                    </header>\r\n                    <svg style={{ position: 'relative', left: 100 }} className='test'></svg>\r\n                </section>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>Loading</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import { Switch } from \"react-router\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Spend from './1'\r\nimport Consist from './consist'\r\nimport Compare from './2'\r\nimport React, { Component } from 'react'\r\nimport * as d3 from 'd3'\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: []\r\n        }\r\n        this.year = ['103年', '104年', '105年', '106年', '107年']\r\n        this.money = ['未達50萬', '-75萬', '-100萬', '-125萬', '-150萬', '-175萬', '-200萬', '200萬[含]']\r\n        this.type = ['食品餐飲', '衣著飾品', '旅館住宿', '交通類', '文教康樂', '百貨類']\r\n    }\r\n    componentDidMount() {\r\n        this.initData()\r\n    }\r\n    initData() {\r\n        let dataArray = []\r\n        //get Data and preset\r\n        d3.csv(require('./data.csv')).then(d => { //important! remeber to require(data)\r\n            //make 3-dimensional array\r\n            //data[year][revenue][type]\r\n            for (const singleYearData of d) {\r\n                let emptyArray = [[], [], [], [], [], [], [], []]\r\n                const yearIndex = this.year.indexOf(singleYearData['年月'])\r\n                dataArray[yearIndex] = [...emptyArray]\r\n                for (const key in singleYearData) {\r\n                    for (const moneyStr of this.money) {\r\n                        for (const typeStr of this.type) {\r\n                            if (key.indexOf(moneyStr) !== -1 && key.indexOf(typeStr) !== -1) {\r\n                                const moneyIndex = this.money.indexOf(moneyStr)\r\n                                const typeIndex = this.type.indexOf(typeStr)\r\n                                dataArray[yearIndex][moneyIndex][typeIndex] = Number(singleYearData[key])\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.setState({ data: dataArray })\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <section>\r\n                {this.state.data.length !== 0 ?\r\n                    <Router basename={process.env.NODE_ENV === 'production'?'/d3test':''}>\r\n                        <Link to='/' style={{ marginRight: 20 }}>各年收花費占比</Link>\r\n                        <Link to='/compare' style={{ marginRight: 20 }}>不同年收花費占比</Link>\r\n                        <Switch>\r\n                            <Route\r\n                                exact\r\n                                path='/'\r\n                                render={() => <Spend originalData={this.state.data} year={this.year} money={this.money} type={this.type} />}\r\n                            />\r\n                            <Route\r\n                                path='/compare'\r\n                                render={() => <Compare originalData={this.state.data} year={this.year} money={this.money} type={this.type} />}\r\n                            />\r\n                        </Switch>\r\n                    </Router>\r\n                    :\r\n                    'LOADING'}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}